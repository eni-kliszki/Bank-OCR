[{"/home/eni04/Documents/Codecool/bank-ocr/src/index.tsx":"1","/home/eni04/Documents/Codecool/bank-ocr/src/App.tsx":"2","/home/eni04/Documents/Codecool/bank-ocr/src/App.style.ts":"3","/home/eni04/Documents/Codecool/bank-ocr/src/textTransformer.ts":"4","/home/eni04/Documents/Codecool/bank-ocr/src/fetchFromBackend.ts":"5"},{"size":366,"mtime":1612428779187,"results":"6","hashOfConfig":"7"},{"size":942,"mtime":1612436224593,"results":"8","hashOfConfig":"7"},{"size":81,"mtime":1612365424692,"results":"9","hashOfConfig":"7"},{"size":2268,"mtime":1612438835534,"results":"10","hashOfConfig":"7"},{"size":131,"mtime":1612438341604,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1jklxwz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eni04/Documents/Codecool/bank-ocr/src/index.tsx",[],["24","25"],"/home/eni04/Documents/Codecool/bank-ocr/src/App.tsx",["26","27","28"],"import { useQuery } from 'react-query';\n//style\nimport { AppContainer } from './App.style';\n//import util functions\nimport { splitDataInNewEveryFourLines, reorderAccountArrays, findNumberBasedOnText } from './textTransformer';\n//import fetch methods\nimport {getAccountsUS1} from './fetchFromBackend'\n\n\nconst App = () => {\n    \n    const {data, isLoading, error} = useQuery<string[]>('accounts', getAccountsUS1);\n    \n    const getTotalAccounts = () => null;\n    \n    const checkIfDataNotUndefined = (data: any): boolean => {\n        return data !== undefined;\n    }\n\n    \n    \n    if(checkIfDataNotUndefined(data)){\n        let accounts:string[] = data!; \n        console.log(findNumberBasedOnText(accounts));\n    }\n\n    if(isLoading) return <div>Loading...</div>;\n    if(error) return <div>Something went wrong...</div>\n\n    return (\n        <AppContainer>\n            <h1>Bank OCR</h1>\n        </AppContainer>\n    );\n}\n\nexport default App;\n","/home/eni04/Documents/Codecool/bank-ocr/src/App.style.ts",[],"/home/eni04/Documents/Codecool/bank-ocr/src/textTransformer.ts",["29"],"/home/eni04/Documents/Codecool/bank-ocr/src/fetchFromBackend.ts",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":5,"column":10,"nodeType":"36","messageId":"37","endLine":5,"endColumn":38},{"ruleId":"34","severity":1,"message":"38","line":5,"column":40,"nodeType":"36","messageId":"37","endLine":5,"endColumn":60},{"ruleId":"34","severity":1,"message":"39","line":14,"column":11,"nodeType":"36","messageId":"37","endLine":14,"endColumn":27},{"ruleId":"34","severity":1,"message":"40","line":1,"column":10,"nodeType":"36","messageId":"37","endLine":1,"endColumn":14},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"@typescript-eslint/no-unused-vars","'splitDataInNewEveryFourLines' is defined but never used.","Identifier","unusedVar","'reorderAccountArrays' is defined but never used.","'getTotalAccounts' is assigned a value but never used.","'type' is defined but never used.","no-global-assign","no-unsafe-negation"]